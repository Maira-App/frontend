name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'frontend-new/**'
  pull_request:
    branches: [ main ]
    paths: 
      - 'frontend-new/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend-new

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend-new/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check
      continue-on-error: true # Allow to continue if no TypeScript files

    - name: Run tests
      run: npm run test
      env:
        CI: true

    - name: Build application
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'http://localhost:3000' }}
        VITE_AUTH_ENABLED: 'true'

    - name: Upload build artifacts
      if: matrix.node-version == '18.x'
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend-new/dist
        retention-days: 7

  deploy-preview:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend-new

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: frontend-new/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build for preview
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL_STAGING || 'http://localhost:3000' }}
        VITE_AUTH_ENABLED: 'true'

    - name: Deploy to Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend-new
        scope: ${{ secrets.VERCEL_ORG_ID }}
      if: ${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend-new

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: frontend-new/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL_PROD }}
        VITE_AUTH_ENABLED: 'true'
        VITE_ENABLE_ANALYTICS: 'true'
        VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}

    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./frontend-new
        scope: ${{ secrets.VERCEL_ORG_ID }}
      if: ${{ secrets.VERCEL_TOKEN }}